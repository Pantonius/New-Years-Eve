{"version":3,"sources":["services/googleapi/sdk.js","services/googleapi/index.js","util/vector.js","canvas/particle.js","util/perlin.js","canvas/firework.js","canvas/draw.js","canvas/index.js","index.js"],"names":["api","getPlaylist","id","url","URLSearchParams","set","request","fetch","toString","response","json","getPlaylistItemCount","pageInfo","totalResults","google","Vector","constructor","x","y","z","mag","Math","sqrt","magSq","pow","normalize","div","setMag","mult","fromAngle","angle","cos","sin","atan2","vector","factor","add","v1","v2","subtr","Particle","mass","pos","prevPos","velocity","acceleration","lifespan","deltaTime","color","colorMode","r","g","b","a","update","updatePrevPos","show","ctx","strokeStyle","beginPath","lineWidth","moveTo","lineTo","stroke","colorVal","expired","applyForce","force","f","Perlin","seed","gradientVector","theta","random","PI","tan","dotProductGrid","vx","vy","vz","dVector","gradients","interpolate","get","xf","floor","yf","zf","tl","tr","bl","br","dtl","dtr","dbl","dbr","xt","xb","xdt","xdb","ya","yd","value","Firework","gravity","delay","exploded","particles","i","length","particle","index","indexOf","splice","explode","particleCount","round","perlinRed","perlinGreen","perlinBlue","perlin","push","background","document","getElementsByClassName","sun","getElementById","lights","drawBackground","width","window","innerWidth","height","innerHeight","radian","Date","getSeconds","style","red","green","blue","opacity","transform","setInterval","canvas","getContext","addEventListener","draw","fireworks","drawFireworks","requestAnimationFrame","fillStyle","fillRect","firework","countDownDate","getTime","countdown","title","currentSong","previousTrack","toggleTrack","nextTrack","volumeRange","playlistId","player","playlistItemCount","countdownInterval","now","until","days","hours","minutes","seconds","innerHTML","formatTime","toTimeString","substr","clearInterval","time","number","initPlayer","YT","Player","playerVars","controls","autoplay","playlist","loop","events","onPlayerReady","onPlayerStateChange","onError","event","target","loadPlaylist","list","listType","startSeconds","suggestedQuality","data","PlayerState","ENDED","nextVideo","setAttribute","playerInfo","videoUrl","console","error","getVideoUrl","hitBounds","left","getPlaylistIndex","playVideoAt","previousVideo","init","getPlayerState","PLAYING","pauseVideo","playVideo","setVolume","onload"],"mappings":"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","file":"New-Years-Eve.e03f2b26.js","sourceRoot":"..","sourcesContent":["const api = \"https://www.googleapis.com/youtube/v3/playlistItems\";\n\nasync function getPlaylist(id) {\n  let url = new URLSearchParams();\n\n  url.set('key', process.env.GOOGLE_API_KEY);\n  url.set('part', 'id');\n  url.set('playlistId', id);\n\n  let request = await fetch(api + '?' + url.toString());\n  let response = await request.json();\n\n  return response;\n}\n\nasync function getPlaylistItemCount(id) {\n  let response = await getPlaylist(id);\n  \n  return response.pageInfo.totalResults;\n}\n\nexport { getPlaylist, getPlaylistItemCount };","import * as google from \"./sdk\"\n\nexport default {\n  ...google\n}","class Vector {\n  constructor(x, y, z) {\n    this.set(x, y, z);\n  }\n\n  set(x, y, z) {\n    if(x) this.x = x;\n    else this.x = 0;\n\n    if(y) this.y = y;\n    else this.y = 0;\n\n    if(z) this.z = z;\n    else this.z = 0;\n  }\n\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  magSq() {\n    const mag = this.mag();\n    return Math.pow(mag, 2);\n  }\n\n  normalize() {\n    const mag = this.mag();\n    \n    if(mag != 0)\n      this.div(mag);\n  }\n\n  setMag(mag) {\n    this.normalize();\n    this.mult(mag);\n  }\n\n  fromAngle(angle) {\n    this.set(Math.cos(angle), Math.sin(angle));\n  }\n\n  angle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  mult(vector, factor) {\n    if(factor) {\n      return new Vector(vector.x * factor, vector.y * factor, vector.z * factor);\n    } else {\n      // vector is actually scalar\n      this.set(this.x * vector, this.y * vector, this.z * vector);\n    }\n  }\n\n  div(vector, factor) {\n    if(factor) {\n      return new Vector(vector.x / factor, vector.y / factor, vector.z / factor);\n    } else {\n      // vector is actually scalar\n      this.set(this.x / vector, this.y / vector, this.z / vector);\n    }\n  }\n\n  add(v1, v2) {\n    if(v2) {\n      return new Vector(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\n    } else {\n      this.set(this.x + v1.x, this.y + v1.y, this.z + v1.z);\n    }\n  }\n\n  subtr(v1, v2) {\n    if(v2) {\n      return new Vector(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z);\n    } else {\n      this.set(this.x - v1.x, this.y - v1.y, this.z - v1.z);\n    }\n  }\n}\n\nexport default Vector;","import Vector from \"../util/vector\";\n\nclass Particle {\n\n  constructor(x, y, mass) {\n    this.pos = new Vector(x, y);\n    this.prevPos = new Vector(x, y);\n\n    this.mass = mass;\n\n    this.velocity = new Vector(0, 0);\n    this.acceleration = new Vector(0, 0);\n    \n    this.lifespan = -1;\n    this.deltaTime = 0;\n    \n    this.color = {\n      colorMode: 'rgba',\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 255\n    }\n  }\n\n  update() {\n    this.updatePrevPos();\n    \n    this.velocity.add(this.acceleration);\n    this.pos.add(this.velocity);\n    this.acceleration.set(0, 0);\n    \n    if(this.lifespan != -1) {\n      this.deltaTime++;\n    }\n  }\n  \n  updatePrevPos() {\n    this.prevPos.x = this.pos.x;\n    this.prevPos.y = this.pos.y;\n    this.prevPos.z = this.pos.z;\n  }\n\n  show(ctx) {\n\n    if(this.lifespan != -1) {\n      let a = this.color.a - this.color.a * (this.deltaTime / this.lifespan);\n\n      ctx.strokeStyle = `${this.color.colorMode}(${this.color.r}, ${this.color.g}, ${this.color.b}, ${a})`;\n    } else {\n      ctx.strokeStyle = `${this.color.colorMode}(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.color.a})`;\n    }\n\n    ctx.beginPath();\n    ctx.lineWidth = 8 + 8 * this.mass;\n    ctx.moveTo(this.prevPos.x, this.prevPos.y);\n    ctx.lineTo(this.pos.x, this.pos.y);\n    ctx.stroke();\n  }\n\n  colorVal(r, g, b, a) {\n    this.color.r = r;\n    this.color.g = g;\n    this.color.b = b;\n    this.color.a = a;\n  }\n\n  colorMode(colorMode) {\n    this.color.colorMode = colorMode;\n  }\n  \n  expired() {\n    return this.lifespan == -1 || this.lifespan - this.deltaTime <= 0;\n  }\n\n  applyForce(force) {\n    let f = new Vector().mult(force, this.mass);\n    this.acceleration.add(f);\n  }\n}\n\nexport default Particle;","import Vector from \"./vector\";\n\nclass Perlin {\n\n  constructor() {\n    this.seed();\n  }\n\n  gradientVector() {\n    let theta = Math.random() * 2 * Math.PI;\n    return new Vector(Math.cos(theta), Math.sin(theta), Math.tan(theta));\n  }\n\n  dotProductGrid(x, y, z, vx, vy, vz) {\n    let gradientVector;\n    let dVector = new Vector(x - vx, y - vy, z - vz);\n\n    if(this.gradients[[vx, vy, vz]]) {\n      gradientVector = this.gradients[[vx, vy, vz]];\n    } else {\n      gradientVector = this.gradientVector();\n      this.gradients[[vx, vy, vz]] = gradientVector;\n    }\n\n    return dVector.x * gradientVector.x + dVector.y * gradientVector.y + dVector.z * gradientVector.z;\n  }\n\n  interpolate(x, a, b) {\n    return a + (6*x**5 - 15*x**4 + 10*x**3) * (b-a);\n  }\n\n  seed() {\n    this.gradients = {};\n  }\n\n  get(x, y, z) {\n    if(!x) return;\n    if(!y) y = 0;\n    if(!z) z = 0;\n\n    let xf = Math.floor(x);\n    let yf = Math.floor(y);\n    let zf = Math.floor(z);\n\n    // Interpolation\n    let tl = this.dotProductGrid(x, y, z, xf, yf, zf);\n    let tr = this.dotProductGrid(x, y, z, xf +1, yf, zf);\n    let bl = this.dotProductGrid(x, y, z, xf, yf +1, zf);\n    let br = this.dotProductGrid(x, y, z, xf +1, yf +1, zf);\n    let dtl = this.dotProductGrid(x, y, z, xf, yf, zf +1);\n    let dtr = this.dotProductGrid(x, y, z, xf +1, yf, zf +1);\n    let dbl = this.dotProductGrid(x, y, z, xf, yf +1, zf +1);\n    let dbr = this.dotProductGrid(x, y, z, xf +1, yf +1, zf +1);\n    \n    let xt = this.interpolate(x - xf, tl, tr);\n    let xb = this.interpolate(x - xf, bl, br);\n    let xdt = this.interpolate(x - xf, dtl, dtr);\n    let xdb = this.interpolate(x - xf, dbl, dbr);\n    \n    let ya = this.interpolate(y - yf, xt, xb);\n    let yd = this.interpolate(y - yf, xdt, xdb);\n\n    let value = this.interpolate(z - zf, ya, yd);\n\n    return value;\n  }\n}\n\nexport default Perlin;","import Particle from \"./particle\";\nimport Perlin from \"../util/perlin\";\n\nclass Firework extends Particle {\n\n  constructor(x, y, mass, gravity) {\n    super(x, y, mass);\n    \n    this.delay = Math.random() * 2 - 1;\n    this.exploded = false;\n\n    this.gravity = gravity;\n\n    this.particles = [];\n  }\n\n  update() {\n    if(!this.exploded) {\n      this.applyForce(this.gravity);\n      super.update();\n      \n      if(this.velocity.y >= this.delay) {\n        this.explode();\n      }\n    } else {\n      for(let i = this.particles.length -1; i >= 0; i--) {\n        let particle = this.particles[i];\n        \n        particle.applyForce(this.gravity);\n        particle.update();\n        \n        if(particle.expired()) {\n          let index = this.particles.indexOf(particle);\n          this.particles.splice(index, 1);\n        }\n      }\n    }\n  }\n\n  explode() {\n    let particleCount = Math.round(100 + Math.random() * 20);\n    \n    let perlinRed = new Perlin();\n    let perlinGreen = new Perlin();\n    let perlinBlue = new Perlin();\n    for(let i = 0; i < particleCount; i++) {\n      let particle = new Particle(this.pos.x, this.pos.y, this.mass / particleCount);\n      \n      let perlin = new Perlin();\n\n      let angle = Math.random() * 360;\n      particle.velocity.x = Math.sin(angle);\n      particle.velocity.y = Math.cos(angle);\n      particle.velocity.setMag(perlin.get(i / 10, 0, 0) * 10);\n      \n      particle.lifespan = perlin.get(i / 10 + 5, 0, 0) * 420;\n      \n      particle.colorVal(127 + perlinRed.get(i / 10) * 255, 127 + perlinGreen.get(i / 2) * 255, 127 + perlinBlue.get(i / 3) * 255, 1);\n      \n      this.particles.push(particle);\n    }\n\n    this.exploded = true;\n  }\n  \n  expired() {\n    return this.exploded && this.particles.length == 0;\n  }\n  \n  show(ctx) {\n    if(!this.exploded) {\n      super.show(ctx);\n    } else {\n      for(let particle of this.particles) {\n        particle.show(ctx);\n      }\n    }\n  }\n}\n\nexport default Firework;","import Firework from './firework';\nimport Vector from '../util/vector';\n\n// ******************************\n// Background\n// ******************************\nconst background = document.getElementsByClassName('background backdrop')[0];\nconst sun = document.getElementById('sun');\nconst lights = document.getElementsByClassName('background light');\n\nfunction drawBackground() {\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n  let seconds = new Date().getSeconds();\n  let radian = (seconds * Math.PI / 12 / 60 / 60) - (Math.PI / 2);\n\n  let y = height - Math.sin(radian) * height - (sun.style.height / 2);\n  let red = Math.sin(radian - Math.PI * .1) * 150;\n  let green = Math.sin(radian) * 240;\n  let blue = Math.sin(radian) * 250;\n  let opacity = y / height;\n\n  sun.style.transform = `translate(${width / 3}px, ${y}px)`;\n  background.style.background = `rgb(${red}, ${green}, ${blue})`; \n  \n  for(let i = 0; i < lights.length; i++) {\n    lights[i].style.opacity = opacity - opacity * i * .75;\n  }\n}\n\ndrawBackground();\nsetInterval(drawBackground, 1000);\n\n// ******************************\n// Fireworks\n// ******************************\nconst canvas = document.getElementById('foreground-canvas');\nconst ctx = canvas.getContext('2d');\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\naddEventListener('resize', () => {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n});\n\nlet fireworks = [];\nlet gravity = new Vector(0, .2, 0);\n\nlet draw;\nfunction drawFireworks() {\n  draw = requestAnimationFrame(drawFireworks);\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  if(Math.random() < (canvas.width / 7500)) {\n    let firework = new Firework(Math.random() * canvas.width, canvas.height, 1, gravity);\n    firework.velocity = new Vector((Math.random() * 2) - 1, - Math.sqrt(2 * gravity.y * canvas.height * (.2 + Math.random() * .6)));\n\n    fireworks.push(firework);\n  }\n  \n  for(let i = fireworks.length -1; i >= 0; i--) {\n    let firework = fireworks[i];\n\n    firework.update();\n    firework.show(ctx);\n\n    if(firework.expired()) {\n      let index = fireworks.indexOf(firework);\n      fireworks.splice(index, 1);\n    }\n  }\n}\n\nexport {\n  drawFireworks\n}","import * as canvas from \"./draw\";\n\nexport default {\n  ...canvas\n}","import google from './services/googleapi';\nimport canvas from './canvas';\n\nconst countDownDate = new Date('Januar 1, 2021 00:00:00').getTime();\n//const countDownDate = new Date(Date.now() + 5000).getTime();\nconst countdown = document.getElementById('countdown');\nconst title = document.getElementById('title');\n\nconst currentSong = document.getElementById('currentSong');\nconst previousTrack = document.getElementById('previousTrack');\nconst toggleTrack = document.getElementById('toggleTrack');\nconst nextTrack = document.getElementById('nextTrack');\nconst volumeRange = document.getElementById('volume');\nconst playlistId = 'PLr6S79MwreeUBXyVbLKjIuOZ2QWV4U79f';\n\n// ******************************\n// Countdown\n// ******************************\nlet countdownInterval = setInterval(() => {\n  // until New Year\n  let now = new Date().getTime();\n  let until = countDownDate - now;\n\n  let days = Math.floor(until / (1000 * 60 * 60 * 24));\n  let hours = Math.floor((until % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((until % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((until % (1000 * 60)) / 1000);\n\n  countdown.innerHTML = `${formatTime(days)}d ${formatTime(hours)}h ${formatTime(minutes)}m ${formatTime(seconds)}s`;\n  title.innerHTML = \"until New Year's Eve\";\n\n  if(until < 0) {\n    countdown.innerHTML = 'HAPPY NEW YEAR';\n    title.innerHTML = new Date().toTimeString().substr(0, 8);\n\n    canvas.drawFireworks();\n    clearInterval(countdownInterval);\n\n    // After New Year\n    setInterval(() => {\n      let time = new Date().toTimeString().substr(0, 8);\n    \n      countdown.innerHTML = 'HAPPY NEW YEAR';\n      title.innerHTML = time;\n    }, 1000);\n  }\n}, 1000);\n\nfunction formatTime(number) {\n  if(number < 10)\n    return `0${number}`;\n  else\n    return number;\n}\n\n// ******************************\n// LOFI-PLAYER\n// ******************************\n\n// Initialize Player\nlet player;\nlet playlistItemCount;\n\nasync function initPlayer() {\n  playlistItemCount = await google.getPlaylistItemCount(playlistId);\n  player = new YT.Player('player', {\n    height: '390',\n    width: '640',\n    playerVars: {\n      controls: 0,\n      autoplay: 1,\n      playlist: playlistId,\n      loop: 1\n    },\n    events: {\n      'onReady': onPlayerReady,\n      'onStateChange': onPlayerStateChange,\n      'onError': onError\n    }\n  });\n}\n\n// Player Events\nfunction onPlayerReady(event) {\n  event.target.loadPlaylist({\n    list: playlistId,\n    listType: 'playlist',\n    index: Math.round(Math.random() * (playlistItemCount - 1)),\n    startSeconds: 0,\n    suggestedQuality: \"small\"\n  });\n}\n\nfunction onPlayerStateChange(event) {\n  if(event.data == YT.PlayerState.ENDED) nextVideo();\n\n  currentSong.setAttribute('href', event.target.playerInfo.videoUrl);\n}\n\nfunction onError(event) {\n  switch (event.data) {\n    case 5:\n    case 100:\n    case 101:\n    case 150:\n      console.error('Could not play video: ' + player.getVideoUrl())\n      nextVideo();\n\n      break;\n  }\n}\n\n// ******************************\n// LOFI-PLAYER - Controls\n// ******************************\nfunction hitBounds(left) {\n  let index = player.getPlaylistIndex();\n\n  if(index == 0 && left) {\n    player.playVideoAt(playlistItemCount -1);\n    return true;\n  } else if(index == playlistItemCount -1 && !left) {\n    player.playVideoAt(0);\n    return true;\n  }\n\n  return false;\n}\n\nfunction nextVideo() {\n  if(!hitBounds(false)) player.nextVideo();\n}\n\nfunction previousVideo() {\n  if(!hitBounds(true)) player.previousVideo();\n}\n\npreviousTrack.addEventListener('click', () => {\n  if(player)\n    previousVideo();\n});\n\ntoggleTrack.addEventListener('click', () => {\n  if(!player) return;\n\n  if(player.getPlayerState() == YT.PlayerState.PLAYING) {\n    player.pauseVideo();\n    toggleTrack.innerHTML = 'play_arrow';\n  }\n  else {\n    player.playVideo();\n    toggleTrack.innerHTML = 'pause'\n  }\n    \n});\n\nnextTrack.addEventListener('click', () => {\n  if(player)\n    nextVideo();\n});\n\nvolumeRange.addEventListener('input', () => {\n  player.setVolume(volumeRange.value);\n});\nvolumeRange.value = 80;\n\nasync function init() {\n  await initPlayer();\n}\n\n// ******************************\n// Initialize\n// ******************************\nwindow.onload = init();"]}